[{"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\Screens\\HomeScreen.js":"4","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\Screens\\ProductScreen.js":"5","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\Screens\\AdminScreen.js":"6","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\ProductScreen.js":"7","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\HomeScreen.js":"8","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\AdminScreen.js":"9","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\store.js":"10","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\reducers\\productReducers.js":"11","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\Dropdown\\Dropdown.js":"14","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\reducers\\cartReducers.js":"16","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\constants\\cartConstants.js":"17","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\actions\\cartActions.js":"18","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\ProductsScreen.js":"19"},{"size":611,"mtime":1628165995784,"results":"20","hashOfConfig":"21"},{"size":2085,"mtime":1628282925771,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1245,"mtime":1627761702565,"results":"24","hashOfConfig":"21"},{"size":2299,"mtime":1627761534495,"results":"25","hashOfConfig":"21"},{"size":126,"mtime":1627644615819,"results":"26","hashOfConfig":"21"},{"size":2660,"mtime":1628175745323,"results":"27","hashOfConfig":"21"},{"size":1399,"mtime":1627988325982,"results":"28","hashOfConfig":"21"},{"size":126,"mtime":1627644615819,"results":"29","hashOfConfig":"21"},{"size":898,"mtime":1628166041002,"results":"30","hashOfConfig":"21"},{"size":2845,"mtime":1628166572454,"results":"31","hashOfConfig":"21"},{"size":1034,"mtime":1628105301592,"results":"32","hashOfConfig":"21"},{"size":3047,"mtime":1628267398798,"results":"33","hashOfConfig":"21"},{"size":1821,"mtime":1628283130155,"results":"34","hashOfConfig":"21"},{"size":3489,"mtime":1628071944630,"results":"35","hashOfConfig":"21"},{"size":712,"mtime":1628003012234,"results":"36","hashOfConfig":"21"},{"size":100,"mtime":1628003002178,"results":"37","hashOfConfig":"21"},{"size":995,"mtime":1628105008540,"results":"38","hashOfConfig":"21"},{"size":6038,"mtime":1628267727714,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"6cdz6",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\index.js",[],["85","86"],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\App.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\Screens\\HomeScreen.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\Screens\\ProductScreen.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\Screens\\AdminScreen.js",[],["87","88"],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\ProductScreen.js",["89"],"import React ,{useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport \"../index.css\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {detailsProduct} from '../actions/productActions';\r\nexport default function ProductScreen(props) {\r\n    const [qty, setQty] = useState(1);\r\n    const productDetails = useSelector(state=>state.productDetails);\r\n    const {product, loading, error} = productDetails;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(detailsProduct(props.match.params.id));\r\n        return ()=>{\r\n            \r\n        };\r\n    },[]);\r\n    const handleAddToCart= ()=>{\r\n        props.history.push(\"/cart/\" + props.match.params.id+\"?qty=\"+ qty)\r\n    }\r\n    return (\r\n        <div > \r\n            <div className=\"back-to-home\">\r\n                <Link to=\"/\">Back To Results</Link>\r\n            </div>\r\n            {loading? <div>loading..</div>:\r\n            error? <div>{error}</div>:\r\n            (\r\n                <div className=\"details\">\r\n                <div className=\"details-image\">\r\n                    <img src={product.urlImg} alt=\"product\">\r\n                    </img>\r\n                </div>\r\n                <div className=\"details-info\">\r\n                    <ul>\r\n                        <li>\r\n                            <h4>{product.name}</h4>\r\n                        </li>\r\n                        <li>\r\n                            <h4>{product.description}</h4> \r\n                        </li>\r\n                        <li>\r\n                            <b>{product.price}$</b>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"details-action\">\r\n                    <ul>\r\n                        <li>\r\n                            Price: {product.price}$\r\n                        </li>\r\n                        <li>\r\n                            Qty: <select value={qty} onChange={(e)=>{setQty(e.target.value)}}>\r\n                                {[...Array(product.countInStock).keys()].map(x=>\r\n                                    <option key={x+1} value={x+1}>{x+1}</option>)}\r\n                            </select>\r\n                        </li>\r\n                        <li>\r\n                            {product.countInStock>0 ?\r\n                             <button onClick={handleAddToCart} className=\"add-cart-btn\">Add to cart</button>\r\n                            :<div className=\"out-of-stock\">Not Available</div>}\r\n                        </li>\r\n                        </ul>\r\n                </div>\r\n\r\n            </div>\r\n            )    \r\n        }\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\HomeScreen.js",["90","91","92"],"import React, {useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { listProducts} from '../actions/productActions';\r\nimport axios from 'axios';\r\nfunction HomeScreen (props){\r\n    const productList = useSelector(state=> state.productList);\r\n    const { products, loading , error } = productList;\r\n    const dispatch = useDispatch();\r\n    //fetching data from server\r\n    useEffect(()=>{\r\n        dispatch(listProducts());\r\n        return ()=>{\r\n\r\n        };\r\n    },[])\r\n\r\n    \r\n    return loading? <div>loading..</div>:error ? <div>{error}</div>: <div>    \r\n\r\n    <ul className=\"products\">\r\n    {\r\n        products.map(product => \r\n            <li key={product._id}>\r\n            <div className=\"product\">\r\n            <Link to={'/product/' + product._id}>\r\n                 <img className=\"product-image\" src={product.urlImg} alt='' />\r\n            </Link>\r\n            <div className=\"product-name\">\r\n                <Link to={'/product/' + product._id}>{product.name}</Link>\r\n                </div>\r\n            <div className=\"product-description\">{product.description}</div>\r\n            <div className=\"product-price\">${product.price}</div>\r\n            <button className=\"pay-button\">Buy</button>\r\n            </div> \r\n            </li>\r\n        )\r\n    }\r\n  </ul></div>\r\n}\r\n\r\nexport default HomeScreen;","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\AdminScreen.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\store.js",["93"],"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport {productListReducer, productDetailsReducer,productSaveReducer,productDeleteReducer } from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport thunk from 'redux-thunk';\r\nimport Cookie from 'js-cookie';\r\n\r\n\r\n//const cartItems =  Cookie.getJSON(\"cartItems\"|| [];\r\n//const initialState = {  cart:{cartItems}    };\r\nconst initialState = {   };\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    productSave: productSaveReducer,\r\n    productDelete: productDeleteReducer\r\n})\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\Dropdown\\Dropdown.js",["94","95","96","97"],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\CartScreen.js",["98"],"import React, {useEffect } from 'react';\r\nimport {addToCart,removeFromCart} from '../actions/cartActions';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nfunction CartScreen(props){\r\n    const cart = useSelector(state => state.cart);\r\n    const {cartItems} = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search? Number(props.location.search.split(\"=\")[1]):1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler = (productId) =>{\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n    useEffect(()=>{\r\n        if(productId)\r\n        {\r\n            dispatch(addToCart(productId,qty));\r\n        }\r\n    },[]);\r\n    const checkoutHandler = () =>{\r\n        props.history.push(\"/redirect=shipping\");\r\n    }\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n            <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                    Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length === 0 ?\r\n                    <div>\r\n                        cart is empty\r\n                    </div>\r\n                    :\r\n                    cartItems.map(item=> \r\n                        <li key={item.product}> \r\n                               <div className=\"cart-image\">\r\n                                    <img src={item.urlImg} className=\"\" alt=\"product\"/>\r\n                                </div>\r\n                                <div className=\"cart-name\">\r\n                                    <div>\r\n                                        <Link to={\"/product/\"+ item.product}>\r\n                                        {item.name}\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div>\r\n                                        Qty:\r\n                                        <select value={item.qty} onChange={(e)=> dispatch(addToCart(item.product, e.target.value))}>\r\n                                            {[...Array(item.countInStock).keys()].map(x=>\r\n                                                <option key={x+1} value={x+1}>{x+1}</option>)\r\n                                            }\r\n                                        </select>\r\n                                        <button type=\"button\" className=\"button\" onClick={()=>removeFromCartHandler(item.product)}>\r\n                                            Delete\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"cart-price\"> \r\n                                    {item.price}$\r\n                                </div>\r\n                        </li>\r\n                        )\r\n                     }\r\n            </ul>\r\n        </div>\r\n        <div className=\"cart-action\">\r\n            <h3>\r\n                subTotal({cartItems.reduce((a,c)=>a+c.qty,0)} items)\r\n                :\r\n            ${cartItems.reduce((a,c) =>a + c.price* c.qty, 0)}\r\n            </h3>\r\n            <button className= \"button primary full-width\" onClick={checkoutHandler} disabled={cartItems.length===0}>Proceed to CheckOut</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CartScreen;","C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\USER\\Desktop\\shop-online\\frontend\\src\\screens\\ProductsScreen.js",["99","100","101","102","103","104"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  saveProduct,\r\n  listProducts,\r\n  deleteProduct,\r\n} from '../actions/productActions';\r\n\r\nfunction ProductsScreen(props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [urlImg, setImage] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, error } = productList;\r\n\r\n  const productSave = useSelector((state) => state.productSave);\r\n  const {\r\n    loading: loadingSave,\r\n    success: successSave,\r\n    error: errorSave,\r\n  } = productSave;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (successSave) {\r\n      setModalVisible(false);\r\n    }\r\n    dispatch(listProducts());\r\n    return () => {\r\n      //\r\n    };\r\n  }, [successSave, successDelete]);\r\n\r\n  const openModal = (product) => {\r\n    setModalVisible(true);\r\n    setId(product._id);\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setDescription(product.description);\r\n    setImage(product.urlImg);\r\n    setCountInStock(product.countInStock);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveProduct({\r\n        _id: id,\r\n        name,\r\n        urlImg,\r\n        description,\r\n        price,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const deleteHandler = (product) => {\r\n    alert(product._id)\r\n    dispatch(deleteProduct(product._id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"content content-margined\">\r\n      <div className=\"product-header\">\r\n        <h3>Managing Products - Admin</h3>\r\n        <button className=\"button primary\" onClick={() => openModal({})}>\r\n          New Product\r\n        </button>\r\n      </div>\r\n      {modalVisible && (\r\n        <div className=\"form\">\r\n          <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n              <li>\r\n                <h2>Product Details</h2>\r\n              </li>\r\n              <li>\r\n                {loadingSave && <div>Loading...</div>}\r\n                {errorSave && <div>{errorSave}</div>}\r\n              </li>\r\n\r\n              <li>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  id=\"name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"name\">url Image</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={urlImg}\r\n                  id=\"name\"\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></input>\r\n              </li>             \r\n              <li>\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"price\"\r\n                  value={price}\r\n                  id=\"price\"\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                ></input>\r\n              </li>\r\n\r\n\r\n              <li>\r\n                <label htmlFor=\"countInStock\">CountInStock</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"countInStock\"\r\n                  value={countInStock}\r\n                  id=\"countInStock\"\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                ></input>\r\n              </li>\r\n\r\n              <li>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={description}\r\n                  id=\"description\"\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </li>\r\n              <li>\r\n                <button type=\"submit\" className=\"button primary\">\r\n                  {id ? 'Update' : 'Create'}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setModalVisible(false)}\r\n                  className=\"button secondary\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"product-list\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>urlImg</th>\r\n              <th>Price</th>\r\n              <th>Description</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.urlImg}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.description}</td>\r\n                <td>\r\n                  <button className=\"button\" onClick={() => openModal(product)}>\r\n                    Edit\r\n                  </button>{' '}\r\n                  <button\r\n                    className=\"button\"\r\n                    onClick={() => deleteHandler(product)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ProductsScreen;",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":17,"column":7,"nodeType":"113","endLine":17,"endColumn":9,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":24},{"ruleId":"115","severity":1,"message":"119","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"120","line":16,"column":7,"nodeType":"113","endLine":16,"endColumn":9,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"122","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"115","severity":1,"message":"123","line":5,"column":12,"nodeType":"117","messageId":"118","endLine":5,"endColumn":21},{"ruleId":"115","severity":1,"message":"124","line":5,"column":23,"nodeType":"117","messageId":"118","endLine":5,"endColumn":35},{"ruleId":"115","severity":1,"message":"125","line":6,"column":18,"nodeType":"117","messageId":"118","endLine":6,"endColumn":25},{"ruleId":"115","severity":1,"message":"126","line":7,"column":19,"nodeType":"117","messageId":"118","endLine":7,"endColumn":26},{"ruleId":"111","severity":1,"message":"127","line":22,"column":7,"nodeType":"113","endLine":22,"endColumn":9,"suggestions":"128"},{"ruleId":"115","severity":1,"message":"119","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":13},{"ruleId":"115","severity":1,"message":"129","line":19,"column":11,"nodeType":"117","messageId":"118","endLine":19,"endColumn":18},{"ruleId":"115","severity":1,"message":"130","line":19,"column":30,"nodeType":"117","messageId":"118","endLine":19,"endColumn":35},{"ruleId":"115","severity":1,"message":"131","line":30,"column":14,"nodeType":"117","messageId":"118","endLine":30,"endColumn":27},{"ruleId":"115","severity":1,"message":"132","line":32,"column":12,"nodeType":"117","messageId":"118","endLine":32,"endColumn":23},{"ruleId":"111","severity":1,"message":"120","line":44,"column":6,"nodeType":"113","endLine":44,"endColumn":34,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["136"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["137"],"'Cookie' is defined but never used.","'selection' is assigned a value but never used.","'setSelection' is assigned a value but never used.","'setQnty' is assigned a value but never used.","'setItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["138"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"148","text":"149"},"Update the dependencies array to be: [dispatch]",{"range":"150","text":"151"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"152","text":"153"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"154","text":"155"},[615,617],"[dispatch, props.match.params.id]",[555,557],"[dispatch]",[721,723],"[dispatch, productId, qty]",[1286,1314],"[successSave, successDelete, dispatch]"]
{"ast":null,"code":"import { PRODUCT_PAYMENT_REQUEST, PRODUCT_PAYMENT_SUCCESS, PRODUCT_PAYMENT_FAIL, PAYMENT_SAVE_REQUEST, PAYMENT_SAVE_SUCCESS, PAYMENT_SAVE_FAIL, PRODUCT_TOP_PAYMENT_REQUEST, PRODUCT_TOP_PAYMENT_SUCCESS } from '../constants/paymentConstants';\nimport axios from 'axios';\n\nconst listPayments = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_PAYMENT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/payments');\n    dispatch({\n      type: PRODUCT_PAYMENT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_PAYMENT_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst topPaymentsAction = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_PAYMENT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/topPayments');\n    dispatch({\n      type: PRODUCT_TOP_PAYMENT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_PAYMENT_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst savePayment = payment => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PAYMENT_SAVE_REQUEST,\n      payload: payment\n    });\n\n    if (!payment._id) {\n      const {\n        data\n      } = await axios.post('/api/payments', payment);\n      dispatch({\n        type: PAYMENT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await axios.put('/api/payments/' + payment._id, payment);\n      dispatch({\n        type: PAYMENT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PAYMENT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listPayments, topPaymentsAction, savePayment };","map":{"version":3,"sources":["C:/Users/USER/Desktop/shop-online/frontend/src/actions/paymentActions.js"],"names":["PRODUCT_PAYMENT_REQUEST","PRODUCT_PAYMENT_SUCCESS","PRODUCT_PAYMENT_FAIL","PAYMENT_SAVE_REQUEST","PAYMENT_SAVE_SUCCESS","PAYMENT_SAVE_FAIL","PRODUCT_TOP_PAYMENT_REQUEST","PRODUCT_TOP_PAYMENT_SUCCESS","axios","listPayments","dispatch","type","data","get","payload","error","message","topPaymentsAction","PRODUCT_TOP_PAYMENT_FAIL","savePayment","payment","getState","_id","post","put"],"mappings":"AAAA,SACIA,uBADJ,EAEIC,uBAFJ,EAGIC,oBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,iBANJ,EAOIC,2BAPJ,EAQIC,2BARJ,QAUS,+BAVT;AAWE,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7C,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CACrB,eADqB,CAAvB;AAGAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,uBAAR;AAAiCa,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,oBAAR;AAA8BY,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA7C,KAAD,CAAR;AACD;AACF,CAVD;;AAWA,MAAMC,iBAAiB,GAAG,MAAM,MAAOP,QAAP,IAAoB;AAClD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CACrB,kBADqB,CAAvB;AAGAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,2BAAR;AAAqCO,MAAAA,OAAO,EAAEF;AAA9C,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEO,wBAAR;AAAkCJ,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAjD,KAAD,CAAR;AACD;AACF,CAVD;;AAaA,MAAMG,WAAW,GAAIC,OAAD,IAAa,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;AAC7D,MAAI;AACFX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,oBAAR;AAA8BW,MAAAA,OAAO,EAAEM;AAAvC,KAAD,CAAR;;AACA,QAAI,CAACA,OAAO,CAACE,GAAb,EAAkB;AAChB,YAAM;AAAEV,QAAAA;AAAF,UAAW,MAAMJ,KAAK,CAACe,IAAN,CAAW,eAAX,EAA4BH,OAA5B,CAAvB;AACAV,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP,oBAAR;AAA8BU,QAAAA,OAAO,EAAEF;AAAvC,OAAD,CAAR;AACD,KAHD,MAGO;AACL,YAAM;AAAEA,QAAAA;AAAF,UAAW,MAAMJ,KAAK,CAACgB,GAAN,CACrB,mBAAmBJ,OAAO,CAACE,GADN,EACUF,OADV,CAAvB;AAEAV,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP,oBAAR;AAA8BU,QAAAA,OAAO,EAAEF;AAAvC,OAAD,CAAR;AACD;AACF,GAVD,CAUE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,iBAAR;AAA2BS,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CAdD;;AAkBA,SACEP,YADF,EAEEQ,iBAFF,EAGEE,WAHF","sourcesContent":["import {\r\n    PRODUCT_PAYMENT_REQUEST,\r\n    PRODUCT_PAYMENT_SUCCESS,\r\n    PRODUCT_PAYMENT_FAIL,\r\n    PAYMENT_SAVE_REQUEST,\r\n    PAYMENT_SAVE_SUCCESS,\r\n    PAYMENT_SAVE_FAIL,\r\n    PRODUCT_TOP_PAYMENT_REQUEST,\r\n    PRODUCT_TOP_PAYMENT_SUCCESS,\r\n    \r\n  } from '../constants/paymentConstants';\r\n  import axios from 'axios';\r\n  \r\n  \r\n  \r\n  const listPayments = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_PAYMENT_REQUEST });\r\n      const { data } = await axios.get(\r\n        '/api/payments'\r\n      );\r\n      dispatch({ type: PRODUCT_PAYMENT_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_PAYMENT_FAIL, payload: error.message });\r\n    }\r\n  };\r\n  const topPaymentsAction = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_TOP_PAYMENT_REQUEST });\r\n      const { data } = await axios.get(\r\n        '/api/topPayments'\r\n      );\r\n      dispatch({ type: PRODUCT_TOP_PAYMENT_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_TOP_PAYMENT_FAIL, payload: error.message });\r\n    }\r\n  };\r\n\r\n\r\n  const savePayment = (payment) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PAYMENT_SAVE_REQUEST, payload: payment });\r\n      if (!payment._id) {\r\n        const { data } = await axios.post('/api/payments', payment);\r\n        dispatch({ type: PAYMENT_SAVE_SUCCESS, payload: data });\r\n      } else {\r\n        const { data } = await axios.put(\r\n          '/api/payments/' + payment._id,payment);\r\n        dispatch({ type: PAYMENT_SAVE_SUCCESS, payload: data });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: PAYMENT_SAVE_FAIL, payload: error.message });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  export {\r\n    listPayments,\r\n    topPaymentsAction,\r\n    savePayment,\r\n  };"]},"metadata":{},"sourceType":"module"}
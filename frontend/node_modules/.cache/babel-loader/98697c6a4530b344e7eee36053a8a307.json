{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\shop-online\\\\frontend\\\\src\\\\screens\\\\StatsScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { listPayments } from '../actions/paymentActions';\nimport { listRecords } from '../actions/recordActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StatsScreen(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const paymentsList = useSelector(state => state.paymentList);\n  const recordList = useSelector(state => state.recordList);\n  const {\n    payments,\n    loading,\n    error\n  } = paymentsList;\n  const {\n    records,\n    loading_,\n    error_\n  } = recordList;\n\n  function getTopSold() {\n    let items = [];\n    records.map(x => items.push(x.item));\n    var counts = {};\n    items.forEach(function (x) {\n      counts[x] = (counts[x] || 0) + 1;\n    });\n    const myJSON = JSON.stringify(counts);\n    console.log(\"items:\" + counts.Stringify);\n  } //fetching data from server\n\n\n  useEffect(() => {\n    dispatch(listPayments());\n    return () => {};\n  }, []); //fetching data from server\n\n  useEffect(() => {\n    getTopSold();\n    dispatch(listRecords());\n    return () => {};\n  }, []);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 50\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: payments.length < 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"no payments yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-sel-payment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top 5 Sel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), payments.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-top-sel\",\n          children: [item.cartItems.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-payment-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gaps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), \"Product: \", x.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gaps\",\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 20\n          }, this), \" \", item.totalAmount, \"$\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gaps\",\n            children: \"purchased at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 18\n          }, this), \" \", item.date, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"records:\", records.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", x.item, \"Sold Amount: \", x.soldAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unique-sel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top 5 unique sel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), payments.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gaps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-payment-name\",\n            children: [\"Product: \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-payment-price\",\n            children: [\"Total Money gained: \", item.totalAmount, \"$\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-payment-price\",\n            children: [\"Sold at: \", item.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, item.product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-sel-payment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Past 5 days $\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), payments.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gaps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-payment-name\",\n            children: [\"Product: \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-payment-price\",\n            children: [\"Total Money gained: \", item.totalAmount, \"$\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-payment-price\",\n            children: [\"Sold at: \", item.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, item.product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 74\n  }, this);\n}\n\n_s(StatsScreen, \"JpE/373l/sq0Cf0en9VXOUn7SYs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = StatsScreen;\nexport default StatsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatsScreen\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/shop-online/frontend/src/screens/StatsScreen.js"],"names":["React","useEffect","listPayments","listRecords","useSelector","useDispatch","StatsScreen","props","dispatch","paymentsList","state","paymentList","recordList","payments","loading","error","records","loading_","error_","getTopSold","items","map","x","push","item","counts","forEach","myJSON","JSON","stringify","console","log","Stringify","length","cartItems","name","totalAmount","date","soldAmount","product"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { listPayments} from '../actions/paymentActions';\r\nimport { listRecords} from '../actions/recordActions';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\n\r\n\r\nfunction StatsScreen(props){\r\n\r\n    const dispatch = useDispatch();\r\n    const paymentsList = useSelector(state=> state.paymentList);\r\n    const recordList = useSelector(state=> state.recordList);\r\n    const { payments, loading , error } = paymentsList;\r\n    const { records, loading_ , error_ } = recordList;\r\n\r\n \r\n    function getTopSold(){\r\n        let items = [];\r\n        records.map(x=>\r\n            items.push(x.item)\r\n        )\r\n        var counts = {};\r\n\r\n        items.forEach(function(x) { counts[x] = (counts[x] || 0)+1; });\r\n        const myJSON = JSON.stringify(counts);\r\n\r\n        console.log(\"items:\"+counts.Stringify);\r\n    }\r\n    //fetching data from server\r\n    useEffect(()=>{\r\n        dispatch(listPayments());\r\n        return ()=>{\r\n        };\r\n    },[])\r\n    //fetching data from server\r\n    useEffect(()=>{\r\n        getTopSold() \r\n        dispatch(listRecords());\r\n        return ()=>{\r\n        };\r\n    },[])\r\n    return loading? <div>loading..</div>:error ? <div>{error}</div>:     <div>\r\n            {payments.length<1 ? <div>no payments yet</div> :\r\n            <div className=\"container\">\r\n\r\n            <div className=\"top-sel-payment\">\r\n                <h2>Top 5 Sel</h2>\r\n                {\r\n               payments.map(item=> \r\n                <div className=\"details-top-sel\">{\r\n                    item.cartItems.map(x=>\r\n                        <div className=\"item-payment-name\">\r\n                        <div className=\"gaps\"></div>  \r\n                        Product: {x.name}\r\n                        </div> \r\n                    )\r\n                   \r\n                 } <div className=\"gaps\">Total Amount</div> {item.totalAmount}$\r\n                 <div className=\"gaps\">purchased at</div> {item.date}$</div>)\r\n                                    \r\n                 \r\n                 \r\n                 }\r\n            </div>\r\n           <h2>\r\n               records:\r\n               {records.map(x=>\r\n                <div>\r\n                Name: {x.item}\r\n                Sold Amount: {x.soldAmount}\r\n                </div>\r\n                )}\r\n               </h2>\r\n            <div className=\"unique-sel\"> \r\n\r\n                <h2>Top 5 unique sel</h2>\r\n\r\n                {\r\n               payments.map(item=> \r\n                <li key={item.product}> \r\n                        <div className=\"gaps\"></div>                     \r\n\r\n                        <div className=\"item-payment-name\">\r\n                            Product: {item.name}\r\n                        </div>\r\n                        <div className=\"item-payment-price\"> \r\n                            Total Money gained: {item.totalAmount}$\r\n                        </div>\r\n                        <div className=\"item-payment-price\"> \r\n                            Sold at: {item.date}\r\n                        </div>         \r\n                </li>\r\n         )} \r\n                </div>\r\n                <div className=\"top-sel-payment\">\r\n\r\n                <h2>Past 5 days $</h2>\r\n                {\r\n               payments.map(item=> \r\n                <li key={item.product}> \r\n                        <div className=\"gaps\"></div>                     \r\n\r\n                        <div className=\"item-payment-name\">\r\n                            Product: {item.name}\r\n                        </div>\r\n                        <div className=\"item-payment-price\"> \r\n                            Total Money gained: {item.totalAmount}$\r\n                        </div>\r\n                        <div className=\"item-payment-price\"> \r\n                            Sold at: {item.date}\r\n                        </div>         \r\n                </li>\r\n         )} \r\n            </div>\r\n            </div>\r\n            \r\n            }\r\n    </div>\r\n}\r\n\r\nexport default StatsScreen;"]},"metadata":{},"sourceType":"module"}